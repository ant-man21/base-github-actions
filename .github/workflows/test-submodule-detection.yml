# .github/workflows/test-submodule-detection.yml
name: Test Submodule Detection

on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  test-submodules:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
          token: ${{ secrets.SUBMODULE_REPO_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Debug repository state
        run: |
          echo "=== Repository State ==="
          echo "Current directory: $(pwd)"
          echo "Current branch: $(git branch --show-current)"
          echo "HEAD commit: $(git rev-parse HEAD)"
          
          echo -e "\n=== All files in repo ==="
          find . -maxdepth 2 -type f | head -20
          
          echo -e "\n=== Git submodule status ==="
          git submodule status || echo "No submodules or submodule command failed"
          
          echo -e "\n=== Check for .gitmodules ==="
          if [ -f .gitmodules ]; then
            echo "‚úÖ .gitmodules exists"
            cat .gitmodules
          else
            echo "‚ùå No .gitmodules file found"
          fi
          
          echo -e "\n=== Look for submodule directories ==="
          for dir in */; do
            if [ -f "$dir/.git" ] || [ -d "$dir/.git" ]; then
              echo "üìÅ Potential submodule: $dir"
              if [ -f "$dir/.git" ]; then
                echo "   Type: File (points to parent .git)"
                cat "$dir/.git"
              else
                echo "   Type: Directory"
              fi
            fi
          done

      - name: Test GitHub API access
        run: |
          echo "=== Testing GitHub API Access ==="
          
          # Test with GITHUB_TOKEN
          echo "Testing with GITHUB_TOKEN..."
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}" | \
            jq -r '.name, .private'
          
          # Test with SUBMODULE_REPO_TOKEN if available
          if [ -n "${{ secrets.SUBMODULE_REPO_TOKEN }}" ]; then
            echo "Testing with SUBMODULE_REPO_TOKEN..."
            curl -s -H "Authorization: token ${{ secrets.SUBMODULE_REPO_TOKEN }}" \
              "https://api.github.com/user" | \
              jq -r '.login'
          else
            echo "‚ùå SUBMODULE_REPO_TOKEN not available"
          fi

      - name: Simulate submodule change detection
        run: |
          echo "=== Simulating Change Detection ==="
          
          # Get current branch and main
          git fetch origin main:refs/remotes/origin/main || true
          
          if git rev-parse --verify refs/remotes/origin/main >/dev/null 2>&1; then
            echo "Comparing against origin/main..."
            git diff --name-only origin/main HEAD || true
            
            echo -e "\n=== Files that might be submodules ==="
            git diff --name-only origin/main HEAD | while read file; do
              if [ -d "$file" ] && ([ -f "$file/.git" ] || [ -d "$file/.git" ]); then
                echo "üìÅ Changed submodule candidate: $file"
              fi
            done
          else
            echo "‚ö†Ô∏è  Cannot compare to main branch"
          fi