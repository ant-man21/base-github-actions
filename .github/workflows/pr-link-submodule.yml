# .github/workflows/pr-link-submodule.yml
name: Link and Validate Submodule PR

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
      - master
      - develop  # Add your target branches here

jobs:
  link-and-validate:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'users/')
    
    permissions:
      pull-requests: write
      contents: read
      checks: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract ticket number
        id: extract
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          TICKET_NUM=$(echo "$BRANCH_NAME" | sed 's/users\///')
          echo "ticket_num=$TICKET_NUM" >> $GITHUB_OUTPUT
          echo "Branch: $BRANCH_NAME, Ticket: $TICKET_NUM"
      
      - name: Get submodule info
        id: submodule
        run: |
          # Get submodule path and URL
          SUBMODULE_PATH=$(git config --file .gitmodules --get-regexp path | awk '{ print $2 }' | head -1)
          SUBMODULE_URL=$(git config --file .gitmodules --get-regexp url | awk '{ print $2 }' | head -1)
          
          # Extract owner and repo from URL
          if [[ $SUBMODULE_URL == git@github.com:* ]]; then
            SUBMODULE_REPO=$(echo $SUBMODULE_URL | sed 's/git@github.com://' | sed 's/.git$//')
          elif [[ $SUBMODULE_URL == https://github.com/* ]]; then
            SUBMODULE_REPO=$(echo $SUBMODULE_URL | sed 's/https:\/\/github.com\///' | sed 's/.git$//')
          else
            echo "Unknown submodule URL format"
            exit 1
          fi
          
          echo "submodule_path=$SUBMODULE_PATH" >> $GITHUB_OUTPUT
          echo "submodule_repo=$SUBMODULE_REPO" >> $GITHUB_OUTPUT
          echo "Submodule: $SUBMODULE_REPO at $SUBMODULE_PATH"
      
      - name: Check for submodule PR
        id: check_pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const [owner, repo] = '${{ steps.submodule.outputs.submodule_repo }}'.split('/');
            const branchName = 'users/${{ steps.extract.outputs.ticket_num }}';
            
            // Search for PR with matching branch
            const { data: prs } = await github.rest.pulls.list({
              owner: owner,
              repo: repo,
              state: 'open',
              head: `${owner}:${branchName}`
            });
            
            if (prs.length === 0) {
              core.setOutput('found', 'false');
              core.setOutput('pr_url', '');
              core.setOutput('pr_number', '');
              return;
            }
            
            const pr = prs[0];
            core.setOutput('found', 'true');
            core.setOutput('pr_url', pr.html_url);
            core.setOutput('pr_number', pr.number.toString());
            core.setOutput('pr_state', pr.state);
      
      - name: Add comment with submodule PR link
        if: steps.check_pr.outputs.found == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.issue.number;
            const submodulePrUrl = '${{ steps.check_pr.outputs.pr_url }}';
            const submoduleRepo = '${{ steps.submodule.outputs.submodule_repo }}';
            
            const comment = `## 🔗 Linked Submodule PR
            
            This PR is linked to a submodule PR:
            - **Submodule Repository:** \`${submoduleRepo}\`
            - **Submodule PR:** ${submodulePrUrl}
            - **Status:** ⏳ Waiting for submodule PR to be closed
            
            ⚠️ **Important:** This PR cannot be merged until the linked submodule PR is closed.
            
            ---
            *This comment was automatically generated by the PR linking workflow.*`;
            
            // Check if we already commented
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Linked Submodule PR')
            );
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }
      
      - name: Create check run for submodule PR status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const found = '${{ steps.check_pr.outputs.found }}' === 'true';
            const prUrl = '${{ steps.check_pr.outputs.pr_url }}';
            
            let status, conclusion, title, summary;
            
            if (!found) {
              status = 'completed';
              conclusion = 'failure';
              title = 'Submodule PR Not Found';
              summary = `No open PR found in submodule repository for branch users/${{ steps.extract.outputs.ticket_num }}`;
            } else {
              status = 'in_progress';
              conclusion = undefined;
              title = 'Submodule PR Linked';
              summary = `Linked to submodule PR: ${prUrl}\n\nWaiting for submodule PR to be closed before allowing merge.`;
            }
            
            const checkRun = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Submodule PR Status',
              head_sha: context.payload.pull_request.head.sha,
              status: status,
              output: {
                title: title,
                summary: summary
              }
            };
            
            if (conclusion) {
              checkRun.conclusion = conclusion;
            }
            
            // await github.rest.checks.create(checkRun);
      
      - name: Add PR label
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const found = '${{ steps.check_pr.outputs.found }}' === 'true';
            const label = found ? 'submodule-linked' : 'submodule-pending';
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: [label]
            });